AWSTemplateFormatVersion: "2010-09-09"

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: Source
        Parameters:
          - CodeStarConnectionArn
          - CoreRepo
          - CoreBranch
      -
        Label:
          default: Identifiers
        Parameters:
          - InstallationName
          - CompilerMacroName
      -
        Label:
          default: Environment
        Parameters:
          - VpcId
          - Subnets
          - SecurityGroups
      -
        Label:
          default: Batch
        Parameters:
          - RootVolumeSize
          - ScratchVolumeSize
          - MinvCpus
          - MaxvCpus
      -
        Label:
          default: Advanced
        Parameters:
          - LauncherBucketName
          - LogRetentionDays

Parameters:
  CodeStarConnectionArn:
    Type: String
    Description: ARN of a CodeStar Connection object that connects this AWS account to GitHub.

  CompilerMacroName:
    Type: String
    Description: Compiler macro name, change this only if you are creating multiple BayerCLAW installations.
    Default: "BC2_Compiler"

  CoreBranch:
    Type: String
    Description: Git branch/tag/version name in the BayerCLAW repo.
    Default: main

  CoreRepo:
    Type: String
    Description: GitHub repo containing the BayerCLAW core code.
    Default: Bayer-Group/BayerCLAW

  InstallationName:
    Type: String
    Description: >
      Name of this BayerCLAW installation, change this only if you are creating multiple BayerCLAW
      installations.
    Default: "bayerclaw2"

  LauncherBucketName:
    Type: String
    Description: >
      Use this to specify a custom name for the job launcher S3 bucket. You must make sure that
      this bucket name is globally unique. Enter "Default" to automatically generate a launcher
      bucket name.
    Default: "Default"

  LogRetentionDays:
    Type: Number
    Description: How long to keep CloudWatch log entries, in days.
    AllowedValues: [ 1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653 ]
    Default: 30

  MaxvCpus:
    Type: Number
    Description: >
      Maximum number of CPUs that Batch will spin up simultaneously.
      Actual maximum may be less depending on EC2 limits in the AWS account.
      Once the maximum is reached, additional jobs will be queued until some jobs finish.
    Default: 256

  MinvCpus:
    Type: Number
    Description: >
      Minimum number of CPUs that Batch will maintain at all times, even when there are no jobs to process.
      Setting this to something greater than zero (e.g. 2) will decrease the Batch cold-start time during testing,
      at the expense of some always-on EC2 instances.
    Default: 0

  RootVolumeSize:
    Type: Number
    Description: Size (in GB) of the EBS root volume used by Batch jobs.
    Default: 100

  ScratchVolumeSize:
    Type: Number
    Description: Size (in GB) of the EBS scratch volume used by Batch jobs.
    Default: 1000

  SecurityGroups:
    Type: String
    Description: >
      Comma-separated list of security group IDs for Batch jobs to run under. Must allow outbound HTTP
      and HTTPS traffic. Enter "Auto" to automatically create a suitable security group.
    Default: Auto

  Subnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: >
      Comma-separated list of subnet IDs for Batch jobs to run in. Subnets must have outbound internet access
      either through a direct Internet Gateway connection or through a NAT Gateway.

  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: ID of the VPC where BayerCLAW will live.

Rules:
  SubnetsInVPC:
    Assertions:
      - Assert:
          "Fn::EachMemberIn":
            - "Fn::ValueOfAll":
                - "AWS::EC2::Subnet::Id"
                - VpcId
            - "Fn::RefAll": "AWS::EC2::VPC::Id"
        AssertDescription: "All subnets must be in the specified VPC"

Resources:
  ResourceBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${InstallationName}-resources-${AWS::AccountId}"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          -
            ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LifecycleConfiguration:
        Rules:
          -
            Prefix: !Ref InstallationName
            ExpirationInDays: 2
            NoncurrentVersionExpirationInDays: 1
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 1
            Status: Enabled
          -
            Prefix: "cloudformation"
            NoncurrentVersionExpirationInDays: 1
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 1
            Status: Enabled
          -
            Prefix: "codebuild"
            ExpirationInDays: 2
            NoncurrentVersionExpirationInDays: 1
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 1
            Status: Enabled
          -
            Prefix: "lambda"
            ExpirationInDays: 2
            NoncurrentVersionExpirationInDays: 1
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 1
            Status: Enabled
          -
            Prefix: "stepfunctions"
            ExpirationInDays: 2
            NoncurrentVersionExpirationInDays: 1
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 1
            Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled

  CoreStackCodebuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Environment:
        Type: LINUX_CONTAINER
        # https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-available.html
#        Image: "aws/codebuild/amazonlinux2-x86_64-standard:4.0"
        Image: "aws/codebuild/standard:5.0"
        ComputeType: BUILD_GENERAL1_SMALL
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: COMPILER_MACRO_NAME
            Type: PLAINTEXT
            Value: !Ref CompilerMacroName
          - Name: INSTALLATION_NAME
            Type: PLAINTEXT
            Value: !Ref InstallationName
          - Name: LAUNCHER_BUCKET_NAME
            Type: PLAINTEXT
            Value: !Ref LauncherBucketName
          - Name: LOG_RETENTION_DAYS
            Type: PLAINTEXT
            Value: !Ref LogRetentionDays
          - Name: MAX_VCPUS
            Type: PLAINTEXT
            Value: !Ref MaxvCpus
          - Name: MIN_VCPUS
            Type: PLAINTEXT
            Value: !Ref MinvCpus
          - Name: RESOURCE_BUCKET_NAME
            Type: PLAINTEXT
            Value: !Ref ResourceBucket
          - Name: ROOT_VOLUME_SIZE
            Type: PLAINTEXT
            Value: !Ref RootVolumeSize
          - Name: SCRATCH_VOLUME_SIZE
            Type: PLAINTEXT
            Value: !Ref ScratchVolumeSize
          - Name: SECURITY_GROUPS
            Type: PLAINTEXT
            Value: !Ref SecurityGroups
          - Name: SUBNETS
            Type: PLAINTEXT
            Value: !Join [",", !Ref Subnets]
          - Name: VPC_ID
            Type: PLAINTEXT
            Value: !Ref VpcId
      ServiceRole: !GetAtt CoreStackCodebuildRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.yml
      Artifacts:
        Type: CODEPIPELINE

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub "${InstallationName}-codepipeline"
      ArtifactStore:
        Location: !Ref ResourceBucket
        Type: S3
      RoleArn: !GetAtt CodePipelineRole.Arn
      DisableInboundStageTransitions: []
      Stages:
        -
          Name: Source
          Actions:
            - Name: Core
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: "1"
              Configuration:
                ConnectionArn: !Ref CodeStarConnectionArn
                FullRepositoryId: !Ref CoreRepo
                BranchName: !Ref CoreBranch
                OutputArtifactFormat: CODE_ZIP
                DetectChanges: false
              OutputArtifacts:
                - Name: coreSrc
#              Namespace: CoreNS
              RunOrder: 1
        -
          Name: BuildCore
          Actions:
            -
              Name: BuildCoreStack
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref CoreStackCodebuildProject
                PrimarySource: coreSrc
              InputArtifacts:
                - Name: coreSrc
              OutputArtifacts:
                - Name: coreStackArtifacts
              Namespace: BuildMainStackNS
              RunOrder: 1
        -
          Name: Deploy
          Actions:
            -
              Name: DeployTemplates
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: S3
                Version: "1"
              Configuration:
                BucketName: !Ref ResourceBucket
                ObjectKey: cloudformation/#{BuildMainStackNS.SOURCE_VERSION}
                Extract: true
              InputArtifacts:
                - Name: coreStackArtifacts
              RunOrder: 1

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: "sts:AssumeRole"
          Effect: Allow
          Principal:
            Service: codepipeline.amazonaws.com
        Version: "2012-10-17"
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                - s3:*
                - codebuild:*
                - cloudformation:CreateStack
                - cloudformation:DescribeStacks
                - cloudformation:DeleteStack
                - cloudformation:UpdateStack
                - cloudformation:CreateChangeSet
                - cloudformation:ExecuteChangeSet
                - cloudformation:DeleteChangeSet
                - cloudformation:DescribeChangeSet
                - cloudformation:SetStackPolicy
                - iam:PassRole
                - codestar-connections:UseConnection
                - sns:Publish
                Effect: Allow
                Resource: '*'

  CoreStackCodebuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: CoreBuilderPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                - "ec2:*"
                - "iam:*"
                - "s3:*"
                - "codedeploy:*"
                - "logs:*"
                - "batch:*"
                - "ssm:*"
                - "cloudformation:*"
                - "lambda:*"
                - "dynamodb:*"
                - "ecr:*"
                Effect: Allow
                Resource: "*"
