AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  WorkflowName:
    Type: String

  StateMachineArn:
    Type: String

  LauncherBucketName:
    Type: String

  NamerLambdaArn:
    Type: String

Resources:
  wfDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
#      MessageRetentionPeriod: 1209600
      # https://github.com/aws-cloudformation/cloudformation-coverage-roadmap/issues/989
#      SqsManagedSseEnabled: true
      KmsMasterKeyId: "alias/aws/sqs"

  wfEventRuleRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonSQSFullAccess"

  wfEventRule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub "${WorkflowName}"
      EventBusName: default
      EventPattern:
        source:
          - "aws.s3"
        detail-type:
          - "Object Created"
        detail:
          bucket:
            name:
              - !Ref LauncherBucketName
          object:
            key:
              -
                prefix: !Sub "${WorkflowName}/"
      State: ENABLED
      RoleArn: !GetAtt wfEventRuleRole.Arn
      Targets:
        -
          Arn: !Ref NamerLambdaArn
          DeadLetterConfig:
            Arn: !GetAtt wfDeadLetterQueue.Arn
          Id: namer-lambda-target
          InputTransformer:
            InputPathsMap:
              bucket: "$.detail.bucket.name"
              key: "$.detail.object.key"
              version: "$.detail.object.version-id"
              replay: "$.replay-name"
            InputTemplate:
              !Sub >-
                {
                  "job_file": {
                    "bucket": <bucket>,
                    "key": <key>,
                    "version": <version>,
                    "s3_request_id": "DEPRECATED"
                  },
                  "replay": <replay>,
                  "index": "main",
                  "sfn_arn": "${StateMachineArn}"
                }

  wfEventArchive:
    Type: AWS::Events::Archive
    Properties:
      ArchiveName: !Sub "${WorkflowName}-events"
      SourceArn: !Sub arn:aws:events:${AWS::Region}:${AWS::AccountId}:event-bus/default
      EventPattern:
        source:
          - "aws.s3"
        detail-type:
          - "Object Created"
        detail:
          bucket:
            name:
              - !Ref LauncherBucketName
          object:
            key:
              -
                prefix: !Sub "${WorkflowName}/"

  wfDLQPolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !GetAtt wfDeadLetterQueue.QueueName
      PolicyDocument:
        Version: 2012-10-17
        Id: wfDLQPolicyID
        Statement:
          -
            Sid: "wfEventRuleToDLQ"
            Effect: Allow
            Principal:
              AWS: "*"
            Action: "SQS:SendMessage"
            Resource:
              - !GetAtt wfDeadLetterQueue.Arn
            Condition:
              ArnEquals:
                "aws:SourceArn": !GetAtt wfEventRule.Arn
